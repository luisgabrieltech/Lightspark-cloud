name: LightSpark CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Teste
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3
    
    - name: Configurar Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Instalar dependências
      run: npm ci
      
    - name: Verificar sintaxe do código
      run: |
        echo "Verificando a sintaxe do código..."
        find Backend -name "*.js" -exec node -c {} \;
    
    - name: Verificar vulnerabilidades
      run: npm audit --production
      continue-on-error: true

  build-deploy:
    name: Build e Deploy
    needs: test
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'push'

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3
    
    - name: Configurar Docker
      uses: docker/setup-buildx-action@v2
    
    - name: Build da imagem Docker
      run: |
        docker build -t lightspark:latest .
        echo "Imagem Docker construída com sucesso"
    
    - name: Deploy
      run: |
        echo "Iniciando aplicação com Docker..."
        docker stop lightspark-app || true
        docker rm lightspark-app || true
        docker run -d --name lightspark-app -p 8585:8585 lightspark:latest
        echo "Aplicação iniciada na porta 8585"
        
    - name: Verificar aplicação
      run: |
        echo "Verificando se a aplicação está funcionando..."
        sleep 5
        curl -s http://localhost:8585/api/status || echo "Aplicação ainda não está respondendo, mas o deploy continuará" 